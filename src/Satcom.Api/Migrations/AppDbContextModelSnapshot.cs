// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Satcom.Api;

#nullable disable

namespace Satcom.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Satcom.Api.Domain.GroundStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ElevationM")
                        .HasColumnType("double precision");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision");

                    b.Property<double>("Lon")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Lat", "Lon");

                    b.ToTable("GroundStations");
                });

            modelBuilder.Entity("Satcom.Api.Domain.Satellite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Callsign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoradId")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.ToTable("Satellites");
                });

            modelBuilder.Entity("Satcom.Api.Domain.Telemetry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double?>("BearingDeg")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ReceivedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("RssiDbm")
                        .HasColumnType("double precision");

                    b.Property<Guid>("SatelliteId")
                        .HasColumnType("uuid");

                    b.Property<double?>("SnrDb")
                        .HasColumnType("double precision");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uuid");

                    b.Property<double?>("ToaMs")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("SatelliteId", "ReceivedAtUtc");

                    b.HasIndex("StationId", "ReceivedAtUtc");

                    b.ToTable("Telemetries");
                });

            modelBuilder.Entity("Satcom.Api.Domain.Telemetry", b =>
                {
                    b.HasOne("Satcom.Api.Domain.Satellite", "Satellite")
                        .WithMany()
                        .HasForeignKey("SatelliteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Satcom.Api.Domain.GroundStation", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Satellite");

                    b.Navigation("Station");
                });
#pragma warning restore 612, 618
        }
    }
}
